// test_perguntas_nao_clima.js - Testar respostas para perguntas n√£o relacionadas ao clima

const OPENAI = require('./open_ai/open_ai');

async function testNonWeatherQuestions() {
    console.log('üß™ TESTANDO PERGUNTAS N√ÉO RELACIONADAS AO CLIMA\n');

    const openaiService = new OPENAI();

    // Perguntas que N√ÉO s√£o sobre clima
    const nonWeatherQuestions = [
        "Ol√°, como est√°s?",
        "Qual √© a capital de Mo√ßambique?",
        "Como posso aprender ingl√™s?",
        "Onde posso comprar comida?",
        "Que horas s√£o?",
        "Como est√° a pol√≠tica?",
        "Preciso de ajuda com matem√°tica",
        "Obrigado pela ajuda",
        "Bom dia!",
        "O que √© a vida?"
    ];

    // Perguntas que S√ÉO sobre clima (para compara√ß√£o)
    const weatherQuestions = [
        "Como est√° o tempo?",
        "Vai chover hoje?",
        "Temperatura em Maputo",
        "Que roupa usar?",
        "Quais locais posso ir hoje?"
    ];

    console.log('1Ô∏è‚É£ TESTANDO PERGUNTAS N√ÉO CLIM√ÅTICAS:');
    console.log('‚ïê'.repeat(50));

    for (const question of nonWeatherQuestions) {
        try {
            console.log(`\n‚ùì Pergunta: "${question}"`);

            // An√°lise da mensagem
            const analysisResult = await openaiService.analyzeMessage(question, {
                queryCount: 3,
                lastCity: 'Beira'
            });

            if (analysisResult.success) {
                const analysis = analysisResult.analysis;

                // Verificar se √© relacionado ao clima
                const isWeatherRelated = openaiService.isWeatherRelatedQuery(analysis);
                console.log(`üå§Ô∏è √â sobre clima: ${isWeatherRelated ? 'SIM' : 'N√ÉO'}`);
                console.log(`üìä Intent: ${analysis.intent}`);
                console.log(`üéØ Confidence: ${analysis.confidence}`);

                if (!isWeatherRelated) {
                    // Gerar resposta amig√°vel
                    const friendlyResponse = await openaiService.generateFriendlyMozambicanResponse(
                        question,
                        analysis,
                        { queryCount: 3, lastCity: 'Beira', expertiseLevel: 'basic' }
                    );

                    if (friendlyResponse.success) {
                        console.log('‚úÖ RESPOSTA AMIG√ÅVEL:');
                        console.log('‚ñ¨'.repeat(40));
                        console.log(friendlyResponse.message);
                        console.log('‚ñ¨'.repeat(40));
                    } else {
                        console.log('‚ùå Erro ao gerar resposta amig√°vel');
                    }
                } else {
                    console.log('‚ö†Ô∏è Sistema classificou como relacionado ao clima');
                }
            }

        } catch (error) {
            console.log(`‚ùå Erro: ${error.message}`);
        }
    }

    console.log('\n\n2Ô∏è‚É£ TESTANDO PERGUNTAS CLIM√ÅTICAS (para compara√ß√£o):');
    console.log('‚ïê'.repeat(50));

    for (const question of weatherQuestions) {
        try {
            console.log(`\n‚ùì Pergunta: "${question}"`);

            const analysisResult = await openaiService.analyzeMessage(question, {
                queryCount: 3,
                lastCity: 'Beira'
            });

            if (analysisResult.success) {
                const analysis = analysisResult.analysis;
                const isWeatherRelated = openaiService.isWeatherRelatedQuery(analysis);

                console.log(`üå§Ô∏è √â sobre clima: ${isWeatherRelated ? 'SIM' : 'N√ÉO'}`);
                console.log(`üìä Intent: ${analysis.intent}`);
                console.log(`üéØ Confidence: ${analysis.confidence}`);
            }

        } catch (error) {
            console.log(`‚ùå Erro: ${error.message}`);
        }
    }

    console.log('\n\nüéØ RESULTADO ESPERADO:');
    console.log('‚úÖ Perguntas n√£o clim√°ticas ‚Üí Respostas amig√°veis em portugu√™s mo√ßambicano');
    console.log('‚úÖ Perguntas clim√°ticas ‚Üí Roteamento normal para dados meteorol√≥gicos');
    console.log('‚úÖ Sistema deve distinguir claramente entre os dois tipos');

    console.log('\n‚úÖ TESTE CONCLU√çDO!');
}

// Executar teste
testNonWeatherQuestions().catch(console.error);
