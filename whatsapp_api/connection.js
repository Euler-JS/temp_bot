// whatsapp_api/connection.js - Adaptado para Temperature Bot
require('dotenv').config();
const axios = require("axios");
const crypto = require('crypto');

class WhatsAppApi {
    constructor(token, phoneNumberID) {
        this.token = token;
        this.phoneNumberID = phoneNumberID;
        this.appSecret = process.env.FACEBOOK_APP_SECRET;
        // console.log('WhatsAppApi initialized with token:', this.token, 'and phoneNumberID:', this.phoneNumberID);
    }

    // Gerar appsecret_proof se dispon√≠vel
    generateAppSecretProof() {
        if (!this.appSecret) return null;
        return crypto.createHmac('sha256', this.appSecret).update(this.token).digest('hex');
    }

    // M√©todo principal para enviar mensagens de texto
    async enviarMensagemUsandoWhatsappAPI(mensagem, numeroCelular) {
        console.log('Enviando mensagem:', mensagem, 'para:', numeroCelular);

        if (!mensagem?.messaging_product) {
            mensagem = {
                messaging_product: 'whatsapp',
                to: numeroCelular,
                text: {
                    body: mensagem.replace(/<\/?[^>]+(>|$)/g, "")
                }
            }
        }

        const messageData = mensagem;

        try {
            // Preparar headers
            const headers = {
                'Authorization': `Bearer ${this.token}`,
                'Content-Type': 'application/json'
            };

            // Construir URL com appsecret_proof se dispon√≠vel
            let url = `https://graph.facebook.com/v19.0/${this.phoneNumberID}/messages`;
            const appSecretProof = this.generateAppSecretProof();
            if (appSecretProof) {
                url += `?appsecret_proof=${appSecretProof}`;
            }

            const response = await axios.post(url, messageData, { headers });
            console.log('Message sent successfully:', response.data);
            return response.data;
        } catch (error) {
            console.error('Error sending message:', error.response ? error.response.data : error.message);
            throw error;
        }
    }

    // M√©todo para enviar templates (√∫til para mensagens de boas-vindas)
    async enviarMensagemUsandoTemplateWhatsappAPI(templateName, numeroCelular, language = 'pt_BR') {
        const messageData = {
            messaging_product: "whatsapp",
            to: numeroCelular,
            type: "template",
            template: {
                name: templateName,
                language: {
                    code: language
                }
            }
        };

        try {
            const response = await axios.post(
                `https://graph.facebook.com/v19.0/${this.phoneNumberID}/messages`,
                messageData,
                {
                    headers: {
                        'Authorization': `Bearer ${this.token}`,
                        'Content-Type': 'application/json'
                    }
                }
            );
            console.log("Template message sent successfully:", response.data);
            return response.data;
        } catch (error) {
            console.error("Error sending template message:", error.response ? error.response.data : error.message);
            throw error;
        }
    }

    // M√©todo principal para enviar mensagens interativas
    async enviarMensagemInterativaUsandoWhatsappAPI(mensagemInterativa) {
        try {
            console.log('üîÑ Tentando enviar mensagem interativa...');
            console.log('üìÑ Payload:', JSON.stringify(mensagemInterativa, null, 2));

            // Preparar headers
            const headers = {
                'Authorization': `Bearer ${this.token}`,
                'Content-Type': 'application/json'
            };

            // Adicionar appsecret_proof se dispon√≠vel
            const appSecretProof = this.generateAppSecretProof();

            // Construir URL com ou sem appsecret_proof
            let url = `https://graph.facebook.com/v19.0/${this.phoneNumberID}/messages`;
            if (appSecretProof) {
                url += `?appsecret_proof=${appSecretProof}`;
                console.log('üîê Usando appsecret_proof para autentica√ß√£o');
            }

            const response = await axios.post(url, mensagemInterativa, { headers });
            console.log('‚úÖ Interactive message sent successfully:', response.data);
            return response.data;

        } catch (error) {
            console.error('‚ùå Error sending interactive message:');
            console.error('üìä Status:', error.response?.status);
            console.error('üìÑ Response data:', JSON.stringify(error.response?.data, null, 2));
            console.error('üîß Request config:', {
                url: error.config?.url,
                headers: error.config?.headers,
                data: error.config?.data
            });
            throw error;
        }
    }

    // **NOVO** - Menu de configura√ß√µes do Temperature Bot
    async enviarMenuConfiguracoes(numeroCelular, usuario = {}) {
        const configMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "‚öôÔ∏è Configura√ß√µes"
                },
                body: {
                    text: "Configure suas prefer√™ncias do bot de temperatura:"
                },
                footer: {
                    text: "Selecione uma op√ß√£o"
                },
                action: {
                    button: "Configurar",
                    sections: [
                        {
                            title: "Prefer√™ncias Gerais",
                            rows: [
                                {
                                    id: "set_city",
                                    title: "Cidade Padr√£o",
                                    description: `Atual: ${usuario?.preferredCity || 'N√£o definida'}`
                                },
                                {
                                    id: "set_units",
                                    title: "Unidade de Temperatura",
                                    description: `Atual: ${usuario?.units === 'fahrenheit' ? 'Fahrenheit' : 'Celsius'}`
                                },
                                {
                                    id: "set_language",
                                    title: "Idioma",
                                    description: `Atual: ${usuario?.language === 'en' ? 'English' : 'Portugu√™s'}`
                                }
                            ]
                        },
                        {
                            title: "Notifica√ß√µes",
                            rows: [
                                {
                                    id: "toggle_notifications",
                                    title: "Alertas de Clima",
                                    description: `${usuario?.notifications ? 'Ativado' : 'Desativado'}`
                                }
                            ]
                        }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(configMenu);
    }

    // **NOVO** - Menu de sele√ß√£o de unidades de temperatura
    async enviarMenuUnidades(numeroCelular) {
        const unitsMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "button",
                header: {
                    type: "text",
                    text: "üå°Ô∏è Unidade de Temperatura"
                },
                body: {
                    text: "Escolha sua unidade de temperatura preferida:"
                },
                action: {
                    buttons: [
                        {
                            type: "reply",
                            reply: {
                                id: "units_celsius",
                                title: "Celsius (¬∞C)"
                            }
                        },
                        {
                            type: "reply",
                            reply: {
                                id: "units_fahrenheit",
                                title: "Fahrenheit (¬∞F)"
                            }
                        }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(unitsMenu);
    }

    // **NOVO** - Menu de sele√ß√£o de idioma
    async enviarMenuIdiomas(numeroCelular) {
        const languageMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "button",
                header: {
                    type: "text",
                    text: "üåç Selecionar Idioma"
                },
                body: {
                    text: "Choose your preferred language / Escolha seu idioma preferido:"
                },
                action: {
                    buttons: [
                        {
                            type: "reply",
                            reply: {
                                id: "lang_pt",
                                title: "üáßüá∑ Portugu√™s"
                            }
                        },
                        {
                            type: "reply",
                            reply: {
                                id: "lang_en",
                                title: "üá∫üá∏ English"
                            }
                        }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(languageMenu);
    }

    // **NOVO** - Bot√µes de a√ß√£o r√°pida para clima
    async enviarBotoesAcaoRapida(numeroCelular, cidade) {
        const quickActions = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "button",
                header: {
                    type: "text",
                    text: `üå§Ô∏è A√ß√µes para ${cidade}`
                },
                body: {
                    text: "O que voc√™ gostaria de fazer?"
                },
                action: {
                    buttons: [
                        {
                            type: "reply",
                            reply: {
                                id: `forecast_${cidade}`,
                                title: "üìÖ Previs√£o 7 dias"
                            }
                        },
                        // {
                        //     type: "reply",
                        //     reply: {
                        //         id: `alerts_${cidade}`,
                        //         title: "üö® Configurar Alertas"
                        //     }
                        // },
                        // {
                        //     type: "reply",
                        //     reply: {
                        //         id: "share_weather",
                        //         title: "üì§ Compartilhar"
                        //     }
                        // }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(quickActions);
    }

    // **NOVO** - Lista de cidades sugeridas
    async enviarListaCidadesSugeridas(numeroCelular, cidades, pais = 'Mo√ßambique') {
        if (!cidades || cidades.length === 0) {
            return await this.enviarMensagemUsandoWhatsappAPI(
                "‚ùå Nenhuma cidade encontrada. Tente digitar de forma diferente.",
                numeroCelular
            );
        }

        const sections = [
            {
                title: `Cidades em ${pais}`,
                rows: cidades.slice(0, 10).map((city, index) => ({
                    id: `city_${city.name.replace(/\s+/g, '_')}`,
                    title: city.name.length > 24 ? city.name.substring(0, 21) + '...' : city.name,
                    description: `${city.region}, ${city.country}`
                }))
            }
        ];

        const cityMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "üèôÔ∏è Selecionar Cidade"
                },
                body: {
                    text: "Encontrei v√°rias cidades. Selecione a correta:"
                },
                footer: {
                    text: "Toque para selecionar"
                },
                action: {
                    button: "Ver Cidades",
                    sections: sections
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(cityMenu);
    }

    // **NOVO** - Menu principal do bot
    async enviarMenuPrincipal(numeroCelular, nomeUsuario = '') {
        const mainMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "button",
                header: {
                    type: "text",
                    text: `üå°Ô∏è Temperature Bot${nomeUsuario ? ` - Ol√°, ${nomeUsuario}!` : ''}`
                },
                body: {
                    text: "Bem-vindo ao seu assistente de clima! O que voc√™ gostaria de fazer?"
                },
                action: {
                    buttons: [
                        {
                            type: "reply",
                            reply: {
                                id: "quick_weather",
                                title: "üå§Ô∏è Clima Agora"
                            }
                        },
                        {
                            type: "reply",
                            reply: {
                                id: "forecast_7days",
                                title: "üìÖ Previs√£o 7 Dias"
                            }
                        },
                        {
                            type: "reply",
                            reply: {
                                id: "settings_menu",
                                title: "‚öôÔ∏è Configura√ß√µes"
                            }
                        }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(mainMenu);
    }

    // **ADAPTADO** - Fun√ß√£o para enviar conte√∫do em partes (para previs√µes longas)
    async enviarConteudoPorPartes(conteudo, numeroCelular, maxLength = 4000) {
        const partes = [];
        let parteAtual = '';

        const linhas = conteudo.split('\n');

        for (const linha of linhas) {
            if ((parteAtual + linha + '\n').length > maxLength) {
                if (parteAtual) {
                    partes.push(parteAtual.trim());
                    parteAtual = linha + '\n';
                } else {
                    // Linha muito longa, dividir for√ßadamente
                    partes.push(linha.substring(0, maxLength));
                    parteAtual = linha.substring(maxLength) + '\n';
                }
            } else {
                parteAtual += linha + '\n';
            }
        }

        if (parteAtual.trim()) {
            partes.push(parteAtual.trim());
        }

        // Enviar cada parte com um pequeno delay
        for (let i = 0; i < partes.length; i++) {
            await this.enviarMensagemUsandoWhatsappAPI(partes[i], numeroCelular);

            // Delay entre mensagens para evitar rate limiting
            if (i < partes.length - 1) {
                await new Promise(resolve => setTimeout(resolve, 1000));
            }
        }
    }

    // **NOVO** - Enviar mensagem com emoji animado (loading)
    async enviarMensagemCarregamento(numeroCelular, acao = 'Processando') {
        const loadingMessage = `‚è≥ ${acao}...\n\n_Aguarde um momento_`;
        return await this.enviarMensagemUsandoWhatsappAPI(loadingMessage, numeroCelular);
    }

    // **NOVO** - Enviar erro formatado
    async enviarMensagemErro(numeroCelular, erro, sugestao = '') {
        let errorMessage = `‚ùå *Ops! Algo deu errado*\n\n`;
        errorMessage += `${erro}\n\n`;

        if (sugestao) {
            errorMessage += `üí° *Sugest√£o:* ${sugestao}\n\n`;
        }

        errorMessage += `Se o problema persistir, digite */ajuda* para ver os comandos dispon√≠veis.`;

        return await this.enviarMensagemUsandoWhatsappAPI(errorMessage, numeroCelular);
    }

    // **NOVO** - Enviar sucesso formatado
    async enviarMensagemSucesso(numeroCelular, mensagem, emoji = '‚úÖ') {
        const successMessage = `${emoji} *Sucesso!*\n\n${mensagem}`;
        return await this.enviarMensagemUsandoWhatsappAPI(successMessage, numeroCelular);
    }

    // **NOVO** - Sugest√µes inteligentes baseadas no contexto
    async enviarSugestoesInteligentes(numeroCelular, sugestoes, contexto = {}) {
        if (!sugestoes || sugestoes.length === 0) return;

        const { cidade, aspectoClima, nivelUsuario } = contexto;

        const headerText = nivelUsuario === 'advanced' ?
            "üß† An√°lises Relacionadas" :
            "üí° Voc√™ pode se interessar por";

        const suggestionMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: headerText
                },
                body: {
                    text: `Baseado na sua consulta${cidade ? ` sobre ${cidade}` : ''}, aqui est√£o algumas sugest√µes:`
                },
                footer: {
                    text: "Toque para explorar"
                },
                action: {
                    button: "Ver Sugest√µes",
                    sections: [
                        {
                            title: "Sugest√µes Personalizadas",
                            rows: sugestoes.slice(0, 10).map((sugestao, index) => ({
                                id: `smart_suggestion_${index}`,
                                title: sugestao.length > 24 ? sugestao.substring(0, 21) + '...' : sugestao,
                                description: this.getContextualDescription(sugestao, contexto)
                            }))
                        }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(suggestionMenu);
    }

    // **NOVO** - Bot√µes de a√ß√£o contextual baseados na expertise do usu√°rio
    async enviarAcoesContextuais(numeroCelular, dados, nivelUsuario = 'basic') {
        const { cidade, temperatura, condicoes } = dados;

        let botoes = [];

        // Bot√µes b√°sicos para todos
        botoes.push({
            type: "reply",
            reply: {
                id: `forecast_${cidade}`,
                title: "üìÖ Previs√£o 7 dias"
            }
        });

        // Bot√µes intermedi√°rios
        if (nivelUsuario === 'intermediate' || nivelUsuario === 'advanced') {
            botoes.push({
                type: "reply",
                reply: {
                    id: `compare_cities`,
                    title: "‚öñÔ∏è Comparar Cidades"
                }
            });
        }

        // Bot√µes avan√ßados
        if (nivelUsuario === 'advanced') {
            botoes.push({
                type: "reply",
                reply: {
                    id: `detailed_analysis`,
                    title: "üìä An√°lise T√©cnica"
                }
            });
        } else {
            botoes.push({
                type: "reply",
                reply: {
                    id: `weather_tips`,
                    title: "üí° Dicas Pr√°ticas"
                }
            });
        }

        const contextualActions = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "button",
                header: {
                    type: "text",
                    text: `üå§Ô∏è A√ß√µes para ${cidade}`
                },
                body: {
                    text: `${temperatura}¬∞C, ${condicoes}\n\nO que voc√™ gostaria de fazer agora?`
                },
                action: {
                    buttons: botoes.slice(0, 3) // WhatsApp permite m√°ximo 3 bot√µes
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(contextualActions);
    }

    // **NOVO** - Menu de compara√ß√£o de cidades inteligente
    async enviarMenuComparacaoCidades(numeroCelular, cidadeAtual, cidadesSugeridas = []) {
        const sections = [
            {
                title: "Comparar com",
                rows: cidadesSugeridas.slice(0, 8).map((cidade, index) => ({
                    id: `compare_${cidadeAtual}_${cidade.replace(/\s+/g, '_')}`,
                    title: cidade,
                    description: `${cidadeAtual} vs ${cidade}`
                }))
            }
        ];

        // Adicionar op√ß√£o personalizada
        sections[0].rows.push({
            id: "compare_custom",
            title: "Outra cidade",
            description: "Digite o nome da cidade"
        });

        const comparisonMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "‚öñÔ∏è Compara√ß√£o Clim√°tica"
                },
                body: {
                    text: `Com qual cidade voc√™ gostaria de comparar ${cidadeAtual}?`
                },
                footer: {
                    text: "Selecione uma op√ß√£o"
                },
                action: {
                    button: "Comparar",
                    sections: sections
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(comparisonMenu);
    }

    // **NOVO** - Alertas personalizados baseados no perfil
    async enviarAlertaPersonalizado(numeroCelular, tipoAlerta, dados, perfilUsuario = {}) {
        const { nivelUsuario, preferencias } = perfilUsuario;
        let emoji, titulo, mensagem;

        switch (tipoAlerta) {
            case 'chuva_iminente':
                emoji = 'üåßÔ∏è';
                titulo = 'Alerta de Chuva';
                mensagem = nivelUsuario === 'advanced' ?
                    `Probabilidade de precipita√ß√£o >80% nas pr√≥ximas 2h em ${dados.cidade}. Sistema de baixa press√£o aproximando-se.` :
                    `Vai chover em breve em ${dados.cidade}! Leve guarda-chuva se for sair.`;
                break;

            case 'temperatura_extrema':
                emoji = dados.temperatura > 35 ? 'üî•' : 'üßä';
                titulo = dados.temperatura > 35 ? 'Calor Extremo' : 'Frio Intenso';
                mensagem = nivelUsuario === 'advanced' ?
                    `Temperatura ${dados.temperatura}¬∞C (${dados.temperatura > 35 ? 'acima' : 'abaixo'} da m√©dia hist√≥rica). √çndice UV elevado.` :
                    `${dados.temperatura > 35 ? 'Muito calor' : 'Muito frio'} hoje em ${dados.cidade}! ${dados.temperatura > 35 ? 'Beba √°gua e procure sombra' : 'Vista-se bem aquecido'}.`;
                break;

            case 'vento_forte':
                emoji = 'üí®';
                titulo = 'Alerta de Vento';
                mensagem = `Ventos fortes previstos para ${dados.cidade}. ${nivelUsuario === 'advanced' ? `Velocidade: ${dados.velocidadeVento}km/h.` : 'Cuidado com objetos soltos!'}`;
                break;
        }

        const alertMessage = `${emoji} *${titulo}*\n\n${mensagem}\n\n‚è∞ ${new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })}`;

        return await this.enviarMensagemUsandoWhatsappAPI(alertMessage, numeroCelular);
    }

    // **NOVO** - Resumo semanal inteligente
    async enviarResumoSemanal(numeroCelular, dadosSemana, nivelUsuario = 'basic') {
        const { cidade, temperaturaMedia, diasChuva, melhorDia, piorDia } = dadosSemana;

        let resumo = `üìä *Resumo Semanal - ${cidade}*\n\n`;

        if (nivelUsuario === 'basic') {
            resumo += `üå°Ô∏è Temperatura m√©dia: ${temperaturaMedia}¬∞C\n`;
            resumo += `‚òî Dias com chuva: ${diasChuva}\n`;
            resumo += `‚ú® Melhor dia: ${melhorDia.dia} (${melhorDia.temperatura}¬∞C)\n`;
            resumo += `üòî Pior dia: ${piorDia.dia} (${piorDia.condicoes})\n\n`;
            resumo += `üí° *Dica da semana:* ${this.gerarDicaSemanal(dadosSemana)}`;
        } else if (nivelUsuario === 'intermediate') {
            resumo += `üìà *An√°lise da Semana:*\n`;
            resumo += `‚Ä¢ Temperatura: ${temperaturaMedia}¬∞C (varia√ß√£o: ${dadosSemana.variacao}¬∞C)\n`;
            resumo += `‚Ä¢ Precipita√ß√£o: ${diasChuva} dias, ${dadosSemana.totalChuva}mm\n`;
            resumo += `‚Ä¢ Umidade m√©dia: ${dadosSemana.umidadeMedia}%\n\n`;
            resumo += `üéØ *Tend√™ncia:* ${dadosSemana.tendencia}\n`;
            resumo += `üîÆ *Pr√≥xima semana:* ${dadosSemana.previsaoProxima}`;
        } else {
            resumo += `üìä *An√°lise Meteorol√≥gica Detalhada:*\n\n`;
            resumo += `üå°Ô∏è Temperatura: ${temperaturaMedia}¬∞C (Œ¥: ${dadosSemana.desvio}¬∞C)\n`;
            resumo += `üíß Precipita√ß√£o acumulada: ${dadosSemana.totalChuva}mm\n`;
            resumo += `üí® Vento m√©dio: ${dadosSemana.ventoMedio}km/h\n`;
            resumo += `üåÄ Press√£o m√©dia: ${dadosSemana.pressaoMedia}hPa\n\n`;
            resumo += `üìà *Padr√µes identificados:*\n${dadosSemana.padroes.join('\n')}\n\n`;
            resumo += `üî¨ *An√°lise sin√≥ptica:* ${dadosSemana.analiseSinoptica}`;
        }

        return await this.enviarMensagemUsandoWhatsappAPI(resumo, numeroCelular);
    }

    // **NOVO** - Quiz educativo meteorol√≥gico
    async enviarQuizEducativo(numeroCelular, nivelDificuldade = 'basic') {
        const quizzes = {
            basic: {
                pergunta: "ü§î *Quiz do Clima*\n\nO que causa a chuva?",
                opcoes: [
                    { id: "quiz_a", title: "A) Nuvens pesadas" },
                    { id: "quiz_b", title: "B) Evapora√ß√£o da √°gua" }, // Correto
                    { id: "quiz_c", title: "C) Vento forte" }
                ]
            },
            intermediate: {
                pergunta: "üß† *Quiz Meteorol√≥gico*\n\nQual √© a principal causa da forma√ß√£o de ciclones tropicais?",
                opcoes: [
                    { id: "quiz_a", title: "A) Temperatura oce√¢nica >26¬∞C" }, // Correto
                    { id: "quiz_b", title: "B) Ventos al√≠sios" },
                    { id: "quiz_c", title: "C) Baixa umidade" }
                ]
            },
            advanced: {
                pergunta: "üéì *Quiz Avan√ßado*\n\nO efeito Coriolis √© mais intenso em qual latitude?",
                opcoes: [
                    { id: "quiz_a", title: "A) Equador (0¬∞)" },
                    { id: "quiz_b", title: "B) P√≥los (90¬∞)" }, // Correto
                    { id: "quiz_c", title: "C) Tr√≥picos (23¬∞)" }
                ]
            }
        };

        const quiz = quizzes[nivelDificuldade];

        const quizMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "button",
                header: {
                    type: "text",
                    text: "üéØ Quiz Meteorol√≥gico"
                },
                body: {
                    text: quiz.pergunta
                },
                action: {
                    buttons: quiz.opcoes
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(quizMenu);
    }

    // **NOVO** - Configura√ß√µes avan√ßadas do usu√°rio
    async enviarMenuConfiguracaoAvancada(numeroCelular, perfilUsuario = {}) {
        const { nivelUsuario, preferencias, notificacoes } = perfilUsuario;

        const configMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "‚öôÔ∏è Configura√ß√µes Avan√ßadas"
                },
                body: {
                    text: "Personalize sua experi√™ncia meteorol√≥gica:"
                },
                footer: {
                    text: "Selecione uma categoria"
                },
                action: {
                    button: "Configurar",
                    sections: [
                        {
                            title: "Personaliza√ß√£o",
                            rows: [
                                {
                                    id: "config_expertise",
                                    title: "N√≠vel de Expertise",
                                    description: `Atual: ${nivelUsuario || 'basic'}`
                                },
                                {
                                    id: "config_style",
                                    title: "Estilo de Resposta",
                                    description: `Atual: ${preferencias?.estilo || 'casual'}`
                                },
                                {
                                    id: "config_interests",
                                    title: "Interesses Clim√°ticos",
                                    description: "Personalizar t√≥picos"
                                }
                            ]
                        },
                        {
                            title: "Notifica√ß√µes Inteligentes",
                            rows: [
                                {
                                    id: "config_alerts",
                                    title: "Alertas Autom√°ticos",
                                    description: `${notificacoes?.alertas ? 'Ativado' : 'Desativado'}`
                                },
                                {
                                    id: "config_schedule",
                                    title: "Hor√°rios de Notifica√ß√£o",
                                    description: `${notificacoes?.horario || '08:00'}`
                                },
                                {
                                    id: "config_frequency",
                                    title: "Frequ√™ncia de Resumos",
                                    description: `${notificacoes?.frequencia || 'Semanal'}`
                                }
                            ]
                        }
                    ]
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(configMenu);
    }

    // **NOVO** - Lista de op√ß√µes de interesse ap√≥s sugest√µes
    async enviarListaInteresseAposSugestoes(numeroCelular, weatherData) {
        const temp = parseInt(weatherData.temperature);
        const city = weatherData.city;

        // Gerar op√ß√µes baseadas no clima atual
        let opcoes = [];

        // Op√ß√µes sempre dispon√≠veis
        opcoes.push(
            {
                id: "previsao_7_dias",
                title: "üìÖ Previs√£o 7 Dias",
                description: `Como ser√° o tempo em ${city} na pr√≥xima semana`
            },
            {
                id: "conselhos_roupa",
                title: "üëï Que Roupa Vestir",
                description: `Dicas de vestu√°rio para ${temp}¬∞C`
            },
            {
                id: "atividades_clima",
                title: "üéØ Atividades Ideais",
                description: `O que fazer com este tempo em ${city}`
            }
        );

        // Op√ß√µes espec√≠ficas baseadas na temperatura
        if (temp > 30) {
            opcoes.push({
                id: "dicas_calor",
                title: "üåû Dicas para o Calor",
                description: "Como se refrescar e se proteger"
            });
        } else if (temp < 20) {
            opcoes.push({
                id: "dicas_frio",
                title: "üß• Dicas para o Frio",
                description: "Como se aquecer e se proteger"
            });
        }

        if (weatherData.condition && weatherData.condition.includes('chuva')) {
            opcoes.push({
                id: "dicas_chuva",
                title: "‚òî Dicas para Chuva",
                description: "Como se preparar para a chuva"
            });
        }

        // Sempre adicionar algumas op√ß√µes educativas
        opcoes.push(
            {
                id: "explicar_meteorologia",
                title: "üå°Ô∏è Como Funciona o Clima",
                description: "Aprende sobre meteorologia"
            },
            {
                id: "alertas_clima",
                title: "üö® Alertas Meteorol√≥gicos",
                description: "Configurar notifica√ß√µes autom√°ticas"
            }
        );

        // Limitar a 8 op√ß√µes m√°ximo
        opcoes = opcoes.slice(0, 8);

        const sections = [
            {
                title: "üí° O que te interessa?",
                rows: opcoes
            }
        ];

        const interestMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "ü§î O que te interessa?"
                },
                body: {
                    text: `Eh p√°, baseado no tempo atual em ${city} (${temp}¬∞C), aqui tens algumas coisas interessantes que podes descobrir:`
                },
                footer: {
                    text: "Joana Bot - Sempre aqui para ajudar! üå§Ô∏è"
                },
                action: {
                    button: "Ver Op√ß√µes",
                    sections: sections
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(interestMenu);
    }

    // **NOVO** - Lista de conselhos personalizados gerados por AI
    async enviarListaConselhosPersonalizados(numeroCelular, adviceOptions, weatherData) {
        if (!adviceOptions || adviceOptions.length === 0) {
            console.log('‚ö†Ô∏è Nenhuma op√ß√£o de conselho dispon√≠vel');
            return;
        }

        const temp = parseInt(weatherData.temperature);
        const city = weatherData.city;

        // Limitar op√ß√µes e garantir formato correto
        const formattedOptions = adviceOptions.slice(0, 8).map(option => ({
            id: option.id || `conselho_${Date.now()}`,
            title: option.title.length > 24 ? option.title.substring(0, 21) + '...' : option.title,
            description: option.description.length > 72 ? option.description.substring(0, 69) + '...' : option.description
        }));

        const sections = [
            {
                title: "üí° Mais conselhos √∫teis",
                rows: formattedOptions
            }
        ];

        const adviceMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "ü§î Outros conselhos?"
                },
                body: {
                    text: `Eh p√°, com ${temp}¬∞C em ${city}, aqui tens mais alguns conselhos que podem ser √∫teis:`
                },
                footer: {
                    text: "Joana Bot - Sempre com bons conselhos! üí°"
                },
                action: {
                    button: "Ver Conselhos",
                    sections: sections
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(adviceMenu);
    }

    // **NOVO** - Lista de zonas seguras e pontos de ref√∫gio
    async enviarListaZonasSeguras(numeroCelular, opcoes, weatherData) {
        if (!opcoes || opcoes.length === 0) {
            return await this.enviarMensagemUsandoWhatsappAPI(
                "‚ùå N√£o foi poss√≠vel carregar informa√ß√µes das zonas seguras. Tente mais tarde.",
                numeroCelular
            );
        }

        const sections = [
            {
                title: "üõ°Ô∏è Zonas Seguras", // Reduzido para 16 caracteres
                rows: opcoes.slice(0, 10).map((opcao, index) => ({
                    id: opcao.id || `safe_zone_${index}`,
                    title: opcao.title.length > 24 ? opcao.title.substring(0, 21) + '...' : opcao.title,
                    description: opcao.description.length > 72 ? opcao.description.substring(0, 69) + '...' : opcao.description
                }))
            }
        ];

        const city = weatherData.city;
        const condition = weatherData.description;
        const temp = parseInt(weatherData.temperature);

        const safeZonesMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "üõ°Ô∏è Zonas Seguras"
                },
                body: {
                    text: `üèôÔ∏è *${city}* - ${temp}¬∞C, ${condition}\n\nEscolha uma categoria para informa√ß√µes espec√≠ficas sobre locais seguros e pontos de ref√∫gio durante emerg√™ncias clim√°ticas:`
                },
                footer: {
                    text: "üö® Emerg√™ncia: 119 (INGC)"
                },
                action: {
                    button: "Ver Op√ß√µes",
                    sections: sections
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(safeZonesMenu);
    }

    // **NOVO** - Lista de alertas meteorol√≥gicos e a√ß√µes
    async enviarListaAlertasMeteorologicos(numeroCelular, opcoes, weatherData, alertsAnalysis) {
        if (!opcoes || opcoes.length === 0) {
            return await this.enviarMensagemUsandoWhatsappAPI(
                "‚ùå N√£o foi poss√≠vel carregar a√ß√µes para os alertas. Mantenha-se atento √†s condi√ß√µes.",
                numeroCelular
            );
        }

        const sections = [
            {
                title: "üö® A√ß√µes Alertas", // 15 chars - dentro do limite
                rows: opcoes.slice(0, 10).map((opcao, index) => ({
                    id: opcao.id || `alert_action_${index}`,
                    title: opcao.title.length > 24 ? opcao.title.substring(0, 21) + '...' : opcao.title,
                    description: opcao.description.length > 72 ? opcao.description.substring(0, 69) + '...' : opcao.description
                }))
            }
        ];

        const city = weatherData.city;
        const condition = weatherData.description;
        const temp = parseInt(weatherData.temperature);
        const alertLevel = alertsAnalysis.alertLevel || 'none';

        // Emoji baseado no n√≠vel de alerta
        const alertEmoji = {
            'critical': 'üî¥',
            'high': 'üü†',
            'medium': 'üü°',
            'low': 'üü¢',
            'none': '‚úÖ'
        };

        const alertsMenu = {
            messaging_product: 'whatsapp',
            recipient_type: "individual",
            to: numeroCelular,
            type: "interactive",
            interactive: {
                type: "list",
                header: {
                    type: "text",
                    text: "üö® Alertas Meteorol√≥gicos"
                },
                body: {
                    text: `${alertEmoji[alertLevel]} *${city}* - ${temp}¬∞C, ${condition}\n\nN√≠vel: ${alertLevel.toUpperCase()}\n\nEscolha uma a√ß√£o baseada nos alertas meteorol√≥gicos detectados:`
                },
                footer: {
                    text: "üÜò Emerg√™ncia: 119 (INGC)"
                },
                action: {
                    button: "Ver A√ß√µes",
                    sections: sections
                }
            }
        };

        return await this.enviarMensagemInterativaUsandoWhatsappAPI(alertsMenu);
    }

    // **UTILIT√ÅRIOS AUXILIARES**

    getContextualDescription(sugestao, contexto) {
        const { aspectoClima, nivelUsuario } = contexto;

        if (sugestao.includes('previs√£o')) return 'Ver pr√≥ximos dias';
        if (sugestao.includes('comparar')) return 'An√°lise comparativa';
        if (sugestao.includes('que √©')) return 'Explica√ß√£o educativa';
        if (nivelUsuario === 'advanced' && sugestao.includes('an√°lise')) return 'Dados t√©cnicos';

        return 'Informa√ß√£o relacionada';
    }

    gerarDicaSemanal(dadosSemana) {
        if (dadosSemana.diasChuva > 3) {
            return "Semana chuvosa! Tenha sempre guarda-chuva √† m√£o.";
        } else if (dadosSemana.temperaturaMedia > 30) {
            return "Semana quente! Mantenha-se hidratado e evite sol das 11h-15h.";
        } else if (dadosSemana.temperaturaMedia < 20) {
            return "Semana fresca! Roupas em camadas s√£o uma boa op√ß√£o.";
        } else {
            return "Semana com clima agrad√°vel! Aproveite para atividades ao ar livre.";
        }
    }
}

module.exports = WhatsAppApi;